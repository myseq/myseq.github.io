<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>async on MySeq</title><link>https://myseq.github.io/tags/async/</link><description>Recent content in async on MySeq</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© Copyleft ðŸ¦–</copyright><lastBuildDate>Mon, 09 Sep 2024 18:35:27 +0800</lastBuildDate><atom:link href="https://myseq.github.io/tags/async/index.xml" rel="self" type="application/rss+xml"/><item><title>Fetching with Retries</title><link>https://myseq.github.io/posts/asyncio/fetching/</link><pubDate>Mon, 09 Sep 2024 18:35:27 +0800</pubDate><guid>https://myseq.github.io/posts/asyncio/fetching/</guid><description>A practical example to fetch multiple pages with retries (using recursive).</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://myseq.github.io/posts/asyncio/fetching/feature_asyncio.jpg"/></item><item><title>About Concurrent.futures()</title><link>https://myseq.github.io/posts/asyncio/concurrent/</link><pubDate>Sun, 21 Jul 2024 22:35:27 +0800</pubDate><guid>https://myseq.github.io/posts/asyncio/concurrent/</guid><description>Run numerous tasks concurrently via multi-thread and multi-process.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://myseq.github.io/posts/asyncio/concurrent/feature_asyncio.jpg"/></item><item><title>Learn AsyncIO by Practices</title><link>https://myseq.github.io/posts/asyncio/practices/</link><pubDate>Tue, 21 May 2024 01:35:27 +0800</pubDate><guid>https://myseq.github.io/posts/asyncio/practices/</guid><description>Next, let&amp;rsquo;s practice AsyncIO with different models.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://myseq.github.io/posts/asyncio/practices/feature_asyncio.jpg"/></item><item><title>Understanding AsyncIO by Examples</title><link>https://myseq.github.io/posts/asyncio/examples/</link><pubDate>Sun, 19 May 2024 09:35:27 +0800</pubDate><guid>https://myseq.github.io/posts/asyncio/examples/</guid><description>Now, let&amp;rsquo;s learn AsyncIO by examples.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://myseq.github.io/posts/asyncio/examples/feature_asyncio.jpg"/></item><item><title>Understanding AsyncIO by Code</title><link>https://myseq.github.io/posts/asyncio/codes/</link><pubDate>Tue, 14 May 2024 06:35:27 +0800</pubDate><guid>https://myseq.github.io/posts/asyncio/codes/</guid><description>Let&amp;rsquo;s learn AsyncIO by code.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://myseq.github.io/posts/asyncio/codes/feature_asyncio.jpg"/></item><item><title>Insecurity in HTTP Headers</title><link>https://myseq.github.io/posts/insecurity_in_http_headers/</link><pubDate>Tue, 04 Apr 2023 17:26:17 +0800</pubDate><guid>https://myseq.github.io/posts/insecurity_in_http_headers/</guid><description>Based on essential security, here is how to protect users by securing HTTP headers for a website.</description></item><item><title>HTTP Versioning</title><link>https://myseq.github.io/posts/http_version/</link><pubDate>Tue, 21 Mar 2023 16:34:50 +0800</pubDate><guid>https://myseq.github.io/posts/http_version/</guid><description>HTTP/1 vs HTTP/1.1 vs HTTP/2 vs HTTP/3</description></item><item><title>Python-httpx Vs Python-requests</title><link>https://myseq.github.io/posts/httpx_vs_requests/</link><pubDate>Sun, 11 Dec 2022 22:43:48 +0800</pubDate><guid>https://myseq.github.io/posts/httpx_vs_requests/</guid><description>Quick comparison between httpx and requests.</description></item></channel></rss>